{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yasha\\\\Downloads\\\\Qoala-OCR-app-main (1)\\\\Qoala-OCR-app-main\\\\Frontend\\\\src\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\n// ImageUploader.js\nimport React, { useState } from 'react';\nimport './ImageUploader.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [extractedInfo, setExtractedInfo] = useState(null);\n  const handleImageChange = event => {\n    const imageFile = event.target.files[0];\n    if (imageFile) {\n      setSelectedImage(URL.createObjectURL(imageFile));\n    }\n  };\n  const handleExtractInfo = () => {\n    // Dummy extracted information for demonstration purposes\n    const dummyInfo = 'Sample extracted information';\n    setExtractedInfo(dummyInfo);\n  };\n  const handleGet = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-uploader-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"http://localhost:5000/api/extract/add\",\n      method: \"post\",\n      enctype: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"upload-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"uploaded_file\",\n          id: \"uploaded_file\",\n          type: \"file\",\n          onChange: handleImageChange,\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), !selectedImage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click or drag an image to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedImage,\n            alt: \"Selected\",\n            className: \"selected-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExtractInfo,\n        className: \"extract-info-btn\",\n        children: \"Extract Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/getall\",\n        children: \"Get All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), extractedInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: extractedInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"KHILoE4DUw9xQDMw5zyc8kn1pbY=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","ImageUploader","_s","selectedImage","setSelectedImage","extractedInfo","setExtractedInfo","handleImageChange","event","imageFile","target","files","URL","createObjectURL","handleExtractInfo","dummyInfo","handleGet","className","children","action","method","enctype","name","id","type","onChange","accept","style","display","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/yasha/Downloads/Qoala-OCR-app-main (1)/Qoala-OCR-app-main/Frontend/src/ImageUploader.js"],"sourcesContent":["// ImageUploader.js\nimport React, { useState } from 'react';\nimport './ImageUploader.css';\nimport {Link} from 'react-router-dom'\nconst ImageUploader = () => {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [extractedInfo, setExtractedInfo] = useState(null);\n\n  const handleImageChange = (event) => {\n    const imageFile = event.target.files[0];\n    if (imageFile) {\n      setSelectedImage(URL.createObjectURL(imageFile));\n    }\n  };\n  \n  const handleExtractInfo = () => {\n    // Dummy extracted information for demonstration purposes\n    const dummyInfo = 'Sample extracted information';\n    setExtractedInfo(dummyInfo);\n  };\n const handleGet = () => {\n  \n }\n  return (\n    <div className=\"image-uploader-container\">\n    <form action=\"http://localhost:5000/api/extract/add\" method=\"post\" enctype=\"multipart/form-data\">\n      <label className=\"upload-image\">\n     \n        <input name='uploaded_file' id='uploaded_file' type=\"file\" onChange={handleImageChange} accept=\"image/*\" style={{ display: 'none' }} />\n     \n        {!selectedImage ? (\n          <p>Click or drag an image to upload</p>\n        ) : (\n          <div className=\"image-preview\">\n            <img src={selectedImage} alt=\"Selected\" className=\"selected-image\" />\n          </div>\n        )}\n      </label>\n      <button onClick={handleExtractInfo} className=\"extract-info-btn\">Extract Information</button>\n      <Link to=\"/getall\">Get All</Link>\n    </form>\n      {extractedInfo && <p>{extractedInfo}</p>}\n  </div>\n  );\n};\n\nexport default ImageUploader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}